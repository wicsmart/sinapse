# connection settings

# connect to MongoDB using the following URL
mongo-url = "mongodb://mongo:27017"
# connect to the Elasticsearch REST API at the following node URLs
elasticsearch-urls = ["http://elasticsearch:9200"]

# frequently required settings

# if you don't want to listen for changes to all collections in MongoDB but only a few
# e.g. only listen for inserts, updates, deletes, and drops from mydb.mycollection
# this setting does not initiate a copy, it is a filter on the oplog change listener only

namespace-regex = '^enel_integrador_etl\.incidencias_calculadas$'

# additionally, if you need to seed an index from a collection and not just listen for changes from the oplog
# you can copy entire collections or views from MongoDB to Elasticsearch

direct-read-namespaces = ["enel_integrador_etl.incidencias_calculadas"]

# if you want to use MongoDB change streams instead of legacy oplog tailing add the following
# in this case you don't need regexes to filter collections.
# change streams require MongoDB version 3.6+
# change streams cannot be combined yet with resume, replay, or cluster options.
# change streams start listening for new changes since the monstache process is started

# So vale para replica set Obs: este parametro mantem o monstache escutando 
# mudancas no mongo atraves do opLog, para isso Ã© necessario setar um replSet 
# mesmo que seja de uma unica instancia
# iniciar o Dockerfile do mongo com CMD ["/usr/bin/mongod" , "--dbpath", "/data/db" ,  "--replSet" , "rs0" , "--bind_ip_all"]
# rodar rs.initiate() no mongo shell
change-stream-namespaces = ["enel_integrador_etl.incidencias_calculadas"]




[[mapping]]
namespace = "enel_integrador_etl.incidencias_calculadas"
index = "incidencia"
type = "_doc"